<?php

namespace Database\Seeders;

use App\Models\Setting;
use Illuminate\Database\Seeder;

class SettingsSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $defaultSettings = [
            // Clinic Information
            [
                'key' => 'clinic.name',
                'value' => 'MediNext EMR Clinic',
                'type' => 'string',
                'group' => 'clinic',
                'description' => 'The name of your clinic',
                'is_public' => true,
            ],
            [
                'key' => 'clinic.phone',
                'value' => '+63 123 456 7890',
                'type' => 'string',
                'group' => 'clinic',
                'description' => 'Primary contact phone number',
                'is_public' => true,
            ],
            [
                'key' => 'clinic.email',
                'value' => 'info@yourclinic.com',
                'type' => 'string',
                'group' => 'clinic',
                'description' => 'Primary contact email',
                'is_public' => true,
            ],
            [
                'key' => 'clinic.address',
                'value' => [
                    'street' => '123 Main Street',
                    'city' => 'Manila',
                    'state' => 'Metro Manila',
                    'postal_code' => '1000',
                    'country' => 'Philippines'
                ],
                'type' => 'json',
                'group' => 'clinic',
                'description' => 'Clinic address information',
                'is_public' => true,
            ],
            [
                'key' => 'clinic.website',
                'value' => 'https://yourclinic.com',
                'type' => 'string',
                'group' => 'clinic',
                'description' => 'Clinic website URL',
                'is_public' => true,
            ],
            [
                'key' => 'clinic.description',
                'value' => 'Professional healthcare services for your family',
                'type' => 'string',
                'group' => 'clinic',
                'description' => 'Brief description of your clinic',
                'is_public' => true,
            ],

            // Working Hours
            [
                'key' => 'working_hours.monday',
                'value' => ['start' => '08:00', 'end' => '17:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Monday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.tuesday',
                'value' => ['start' => '08:00', 'end' => '17:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Tuesday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.wednesday',
                'value' => ['start' => '08:00', 'end' => '17:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Wednesday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.thursday',
                'value' => ['start' => '08:00', 'end' => '17:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Thursday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.friday',
                'value' => ['start' => '08:00', 'end' => '17:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Friday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.saturday',
                'value' => ['start' => '08:00', 'end' => '12:00', 'closed' => false],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Saturday working hours',
                'is_public' => true,
            ],
            [
                'key' => 'working_hours.sunday',
                'value' => ['start' => '00:00', 'end' => '00:00', 'closed' => true],
                'type' => 'json',
                'group' => 'working_hours',
                'description' => 'Sunday working hours',
                'is_public' => true,
            ],

            // Notifications
            [
                'key' => 'notifications.email_enabled',
                'value' => true,
                'type' => 'boolean',
                'group' => 'notifications',
                'description' => 'Enable email notifications',
                'is_public' => false,
            ],
            [
                'key' => 'notifications.sms_enabled',
                'value' => false,
                'type' => 'boolean',
                'group' => 'notifications',
                'description' => 'Enable SMS notifications',
                'is_public' => false,
            ],
            [
                'key' => 'notifications.appointment_reminder_hours',
                'value' => 24,
                'type' => 'integer',
                'group' => 'notifications',
                'description' => 'Hours before appointment to send reminder',
                'is_public' => false,
            ],
            [
                'key' => 'notifications.follow_up_days',
                'value' => 7,
                'type' => 'integer',
                'group' => 'notifications',
                'description' => 'Days after visit to send follow-up',
                'is_public' => false,
            ],

            // Branding
            [
                'key' => 'branding.primary_color',
                'value' => '#3B82F6',
                'type' => 'string',
                'group' => 'branding',
                'description' => 'Primary brand color (hex)',
                'is_public' => true,
            ],
            [
                'key' => 'branding.secondary_color',
                'value' => '#1E40AF',
                'type' => 'string',
                'group' => 'branding',
                'description' => 'Secondary brand color (hex)',
                'is_public' => true,
            ],
            [
                'key' => 'branding.logo_url',
                'value' => null,
                'type' => 'string',
                'group' => 'branding',
                'description' => 'URL to clinic logo',
                'is_public' => true,
            ],
            [
                'key' => 'branding.favicon_url',
                'value' => null,
                'type' => 'string',
                'group' => 'branding',
                'description' => 'URL to clinic favicon',
                'is_public' => true,
            ],

            // System Settings
            [
                'key' => 'system.timezone',
                'value' => 'Asia/Manila',
                'type' => 'string',
                'group' => 'system',
                'description' => 'Default timezone for the clinic',
                'is_public' => false,
            ],
            [
                'key' => 'system.date_format',
                'value' => 'Y-m-d',
                'type' => 'string',
                'group' => 'system',
                'description' => 'Date format for display',
                'is_public' => false,
            ],
            [
                'key' => 'system.time_format',
                'value' => 'H:i',
                'type' => 'string',
                'group' => 'system',
                'description' => 'Time format for display',
                'is_public' => false,
            ],
            [
                'key' => 'system.currency',
                'value' => 'PHP',
                'type' => 'string',
                'group' => 'system',
                'description' => 'Default currency for the clinic',
                'is_public' => false,
            ],
            [
                'key' => 'system.language',
                'value' => 'en',
                'type' => 'string',
                'group' => 'system',
                'description' => 'Default language for the application',
                'is_public' => false,
            ],

            // Appointment Settings
            [
                'key' => 'appointments.default_duration',
                'value' => 30,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Default appointment duration in minutes',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.buffer_time',
                'value' => 15,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Buffer time between appointments in minutes',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.auto_confirm',
                'value' => false,
                'type' => 'boolean',
                'group' => 'appointments',
                'description' => 'Automatically confirm new appointments',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.allow_online_booking',
                'value' => true,
                'type' => 'boolean',
                'group' => 'appointments',
                'description' => 'Allow patients to book appointments online',
                'is_public' => true,
            ],
            [
                'key' => 'appointments.max_advance_days',
                'value' => 90,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Maximum days in advance for booking',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.min_advance_hours',
                'value' => 2,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Minimum hours in advance for booking',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.cancellation_hours',
                'value' => 24,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Hours before appointment when cancellation is allowed',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.reminder_hours',
                'value' => 24,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Hours before appointment to send reminder',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.max_per_day',
                'value' => 50,
                'type' => 'integer',
                'group' => 'appointments',
                'description' => 'Maximum appointments per day',
                'is_public' => false,
            ],
            [
                'key' => 'appointments.types',
                'value' => [
                    'consultation' => ['duration' => 30, 'cost' => 50.00],
                    'follow_up' => ['duration' => 20, 'cost' => 30.00],
                    'emergency' => ['duration' => 60, 'cost' => 100.00],
                    'routine_checkup' => ['duration' => 45, 'cost' => 75.00],
                    'specialist_consultation' => ['duration' => 45, 'cost' => 100.00],
                    'procedure' => ['duration' => 90, 'cost' => 200.00],
                    'surgery' => ['duration' => 180, 'cost' => 1000.00],
                    'lab_test' => ['duration' => 15, 'cost' => 25.00],
                    'imaging' => ['duration' => 30, 'cost' => 150.00],
                    'physical_therapy' => ['duration' => 60, 'cost' => 80.00],
                ],
                'type' => 'json',
                'group' => 'appointments',
                'description' => 'Appointment types with duration and cost',
                'is_public' => false,
            ],

            // Prescription Settings
            [
                'key' => 'prescriptions.default_expiry_days',
                'value' => 30,
                'type' => 'integer',
                'group' => 'prescriptions',
                'description' => 'Default prescription expiry in days',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.max_refills',
                'value' => 12,
                'type' => 'integer',
                'group' => 'prescriptions',
                'description' => 'Maximum number of refills allowed',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.require_verification',
                'value' => true,
                'type' => 'boolean',
                'group' => 'prescriptions',
                'description' => 'Require prescription verification before dispensing',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.auto_generate_pdf',
                'value' => true,
                'type' => 'boolean',
                'group' => 'prescriptions',
                'description' => 'Automatically generate PDF for prescriptions',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.include_warnings',
                'value' => true,
                'type' => 'boolean',
                'group' => 'prescriptions',
                'description' => 'Include drug interaction and allergy warnings',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.controlled_substances',
                'value' => [
                    'require_prior_auth' => true,
                    'max_quantity' => 30,
                    'special_verification' => true,
                ],
                'type' => 'json',
                'group' => 'prescriptions',
                'description' => 'Controlled substance prescription settings',
                'is_public' => false,
            ],
            [
                'key' => 'prescriptions.medication_forms',
                'value' => [
                    'tablet', 'capsule', 'liquid', 'injection', 'cream', 
                    'ointment', 'drops', 'inhaler', 'patch', 'suppository', 'other'
                ],
                'type' => 'json',
                'group' => 'prescriptions',
                'description' => 'Available medication forms',
                'is_public' => false,
            ],

            // Billing Settings
            [
                'key' => 'billing.tax_rate',
                'value' => 12.0,
                'type' => 'decimal',
                'group' => 'billing',
                'description' => 'Default tax rate percentage',
                'is_public' => false,
            ],
            [
                'key' => 'billing.payment_terms_days',
                'value' => 30,
                'type' => 'integer',
                'group' => 'billing',
                'description' => 'Default payment terms in days',
                'is_public' => false,
            ],
            [
                'key' => 'billing.auto_generate_bills',
                'value' => true,
                'type' => 'boolean',
                'group' => 'billing',
                'description' => 'Automatically generate bills after encounters',
                'is_public' => false,
            ],
            [
                'key' => 'billing.payment_methods',
                'value' => [
                    'cash', 'credit_card', 'debit_card', 'check', 
                    'bank_transfer', 'insurance', 'other'
                ],
                'type' => 'json',
                'group' => 'billing',
                'description' => 'Accepted payment methods',
                'is_public' => true,
            ],
            [
                'key' => 'billing.insurance_verification',
                'value' => true,
                'type' => 'boolean',
                'group' => 'billing',
                'description' => 'Require insurance verification before treatment',
                'is_public' => false,
            ],
            [
                'key' => 'billing.copay_collection',
                'value' => 'at_service',
                'type' => 'string',
                'group' => 'billing',
                'description' => 'When to collect copay (at_service, at_billing, never)',
                'is_public' => false,
            ],
            [
                'key' => 'billing.discount_policies',
                'value' => [
                    'senior_citizen' => 20.0,
                    'pwd' => 20.0,
                    'bulk_discount' => 10.0,
                ],
                'type' => 'json',
                'group' => 'billing',
                'description' => 'Discount policies and percentages',
                'is_public' => false,
            ],

            // Security Settings
            [
                'key' => 'security.session_timeout',
                'value' => 480,
                'type' => 'integer',
                'group' => 'security',
                'description' => 'Session timeout in minutes',
                'is_public' => false,
            ],
            [
                'key' => 'security.password_min_length',
                'value' => 8,
                'type' => 'integer',
                'group' => 'security',
                'description' => 'Minimum password length',
                'is_public' => false,
            ],
            [
                'key' => 'security.require_2fa',
                'value' => false,
                'type' => 'boolean',
                'group' => 'security',
                'description' => 'Require two-factor authentication',
                'is_public' => false,
            ],
            [
                'key' => 'security.audit_log_retention_days',
                'value' => 2555,
                'type' => 'integer',
                'group' => 'security',
                'description' => 'Audit log retention period in days (7 years)',
                'is_public' => false,
            ],
            [
                'key' => 'security.patient_data_retention_days',
                'value' => 2555,
                'type' => 'integer',
                'group' => 'security',
                'description' => 'Patient data retention period in days (7 years)',
                'is_public' => false,
            ],
            [
                'key' => 'security.auto_logout_inactive',
                'value' => true,
                'type' => 'boolean',
                'group' => 'security',
                'description' => 'Automatically logout inactive users',
                'is_public' => false,
            ],
            [
                'key' => 'security.ip_whitelist',
                'value' => [],
                'type' => 'json',
                'group' => 'security',
                'description' => 'IP addresses allowed to access the system',
                'is_public' => false,
            ],

            // Integration Settings
            [
                'key' => 'integrations.lab_system',
                'value' => [
                    'enabled' => false,
                    'provider' => null,
                    'api_endpoint' => null,
                    'api_key' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'Laboratory system integration settings',
                'is_public' => false,
            ],
            [
                'key' => 'integrations.pharmacy_system',
                'value' => [
                    'enabled' => false,
                    'provider' => null,
                    'api_endpoint' => null,
                    'api_key' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'Pharmacy system integration settings',
                'is_public' => false,
            ],
            [
                'key' => 'integrations.insurance_verification',
                'value' => [
                    'enabled' => false,
                    'provider' => null,
                    'api_endpoint' => null,
                    'api_key' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'Insurance verification system settings',
                'is_public' => false,
            ],
            [
                'key' => 'integrations.payment_gateway',
                'value' => [
                    'enabled' => false,
                    'provider' => null,
                    'merchant_id' => null,
                    'api_key' => null,
                    'webhook_secret' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'Payment gateway integration settings',
                'is_public' => false,
            ],
            [
                'key' => 'integrations.sms_provider',
                'value' => [
                    'enabled' => false,
                    'provider' => null,
                    'api_key' => null,
                    'sender_id' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'SMS notification provider settings',
                'is_public' => false,
            ],
            [
                'key' => 'integrations.email_provider',
                'value' => [
                    'enabled' => true,
                    'provider' => 'smtp',
                    'smtp_host' => null,
                    'smtp_port' => 587,
                    'smtp_username' => null,
                    'smtp_password' => null,
                ],
                'type' => 'json',
                'group' => 'integrations',
                'description' => 'Email provider settings',
                'is_public' => false,
            ],

            // Queue Management Settings
            [
                'key' => 'queue.auto_call_next',
                'value' => false,
                'type' => 'boolean',
                'group' => 'queue',
                'description' => 'Automatically call next patient when current is served',
                'is_public' => false,
            ],
            [
                'key' => 'queue.priority_levels',
                'value' => [
                    'emergency' => 1,
                    'urgent' => 2,
                    'normal' => 3,
                    'low' => 4,
                ],
                'type' => 'json',
                'group' => 'queue',
                'description' => 'Queue priority levels and weights',
                'is_public' => false,
            ],
            [
                'key' => 'queue.max_wait_time_minutes',
                'value' => 120,
                'type' => 'integer',
                'group' => 'queue',
                'description' => 'Maximum wait time before escalation',
                'is_public' => false,
            ],
            [
                'key' => 'queue.allow_walk_ins',
                'value' => true,
                'type' => 'boolean',
                'group' => 'queue',
                'description' => 'Allow walk-in patients to join queue',
                'is_public' => true,
            ],

            // EMR Settings
            [
                'key' => 'emr.auto_save_interval',
                'value' => 30,
                'type' => 'integer',
                'group' => 'emr',
                'description' => 'Auto-save interval in seconds',
                'is_public' => false,
            ],
            [
                'key' => 'emr.require_diagnosis',
                'value' => true,
                'type' => 'boolean',
                'group' => 'emr',
                'description' => 'Require diagnosis before completing encounter',
                'is_public' => false,
            ],
            [
                'key' => 'emr.allow_anonymous_encounters',
                'value' => false,
                'type' => 'boolean',
                'group' => 'emr',
                'description' => 'Allow encounters without patient registration',
                'is_public' => false,
            ],
            [
                'key' => 'emr.vital_signs_required',
                'value' => [
                    'blood_pressure' => true,
                    'heart_rate' => true,
                    'temperature' => true,
                    'weight' => true,
                    'height' => true,
                ],
                'type' => 'json',
                'group' => 'emr',
                'description' => 'Required vital signs for encounters',
                'is_public' => false,
            ],
            [
                'key' => 'emr.visit_types',
                'value' => [
                    'consultation', 'follow_up', 'emergency', 'routine_checkup',
                    'specialist_consultation', 'procedure', 'surgery', 'lab_test',
                    'imaging', 'physical_therapy'
                ],
                'type' => 'json',
                'group' => 'emr',
                'description' => 'Available visit types',
                'is_public' => false,
            ],

            // File Management Settings
            [
                'key' => 'files.max_upload_size_mb',
                'value' => 10,
                'type' => 'integer',
                'group' => 'files',
                'description' => 'Maximum file upload size in MB',
                'is_public' => false,
            ],
            [
                'key' => 'files.allowed_types',
                'value' => [
                    'pdf', 'jpg', 'jpeg', 'png', 'gif', 'doc', 'docx', 
                    'xls', 'xlsx', 'txt', 'csv'
                ],
                'type' => 'json',
                'group' => 'files',
                'description' => 'Allowed file types for upload',
                'is_public' => false,
            ],
            [
                'key' => 'files.storage_driver',
                'value' => 'local',
                'type' => 'string',
                'group' => 'files',
                'description' => 'File storage driver (local, s3, etc.)',
                'is_public' => false,
            ],
            [
                'key' => 'files.encrypt_sensitive',
                'value' => true,
                'type' => 'boolean',
                'group' => 'files',
                'description' => 'Encrypt sensitive medical files',
                'is_public' => false,
            ],

            // Reporting Settings
            [
                'key' => 'reports.auto_generate_daily',
                'value' => true,
                'type' => 'boolean',
                'group' => 'reports',
                'description' => 'Automatically generate daily reports',
                'is_public' => false,
            ],
            [
                'key' => 'reports.include_patient_data',
                'value' => false,
                'type' => 'boolean',
                'group' => 'reports',
                'description' => 'Include patient data in reports',
                'is_public' => false,
            ],
            [
                'key' => 'reports.retention_days',
                'value' => 365,
                'type' => 'integer',
                'group' => 'reports',
                'description' => 'Report retention period in days',
                'is_public' => false,
            ],
            [
                'key' => 'reports.export_formats',
                'value' => ['pdf', 'excel', 'csv'],
                'type' => 'json',
                'group' => 'reports',
                'description' => 'Available report export formats',
                'is_public' => false,
            ],
        ];

        foreach ($defaultSettings as $setting) {
            Setting::create($setting);
        }
    }
}
